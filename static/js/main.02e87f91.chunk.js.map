{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02e87f91.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n  \r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\"\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail ] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError]= useState(\"\");\r\n\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { name, value },\r\n        } = event;\r\n        if(name===\"email\"){\r\n            setEmail(value);\r\n        } else if (name===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n        \r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n\r\n            }else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            //console.log(error);\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input \r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n             />\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                 />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\" }/>\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n            </>\r\n    );\r\n\r\n};\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target : {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n\r\n    };\r\n    return (\r\n      <div>\r\n        <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick}name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick}name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import {dbService, storageService} from \"fbase\";\r\nimport {useState} from \"react\";\r\n\r\nconst Nweet =({nweetObj, isOwner})=>{\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick =async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev)=> !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n        };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //console.log(nweetObj.id, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text : newNweet});\r\n        setEditing(false);\r\n    };\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value = {newNweet} required />\r\n                        <input type =\"submit\" value=\"Update Nweet\" />\r\n                    </form>\r\n                    <button onClick = {toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n        <>\r\n            \r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && (\r\n                <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n            )}\r\n            {isOwner && (\r\n                <>\r\n                    <button onClick  ={onDeleteClick}>Delete Nweet</button>\r\n                    <button onClick={toggleEditing}>Edit Nweet</button>\r\n                </>\r\n            )}\r\n            </>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n        };\r\nexport default Nweet;\r\n","import {useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) =>{\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment]= useState(\"\");\r\n\r\n    const onSubmit =async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") {\r\n        //  await dbService.collection(\"nweets\").add({\r\n        //      text : nweet,\r\n        //      createdAt : Date.now(),\r\n        //      creatorId: userObj.uid,\r\n        //  });\r\n        //  setNweet(\"\");\r\n        const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text : nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target : { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n\r\n        const {\r\n            target : {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend= (finishedEvent) => {\r\n            const {\r\n                currentTarget : {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n    <form onSubmit = {onSubmit}>\r\n        <input\r\n        value={nweet}\r\n        onChange = {onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n        <input type=\"submit\" value=\"Nweet\" />\r\n        {attachment && (\r\n        <div>\r\n            <img src ={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n        )}\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n\r\n\r\n    const [nweets, setNweets ] =useState([]);\r\n\r\n\r\n//    const getNweets = async () => {\r\n//        const dbNweets = await dbService.collection(\"nweets\").get();\r\n//        dbNweets.forEach((document) => {\r\n//            const nweetObject = { ...document.data(), id : document.id };\r\n//            setNweets((prev)=> [nweetObject, ...prev])\r\n//        });\r\n//    };\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot)=> {\r\n            const newArray = snapshot.docs.map((document)=>({\r\n                id : document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n//        getNweets();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n        <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {nweets.map((nweet)=>(\r\n//                <div key ={nweet.id}>\r\n//                    <h4>{nweet.text}</h4>\r\n//                </div>\r\n                <Nweet key={nweet.id}\r\n                    nweetObj={nweet}\r\n                    isOwner = {nweet.creatorId === userObj.uid}\r\n                    />\r\n        ))}\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n//<span>Home</span>;\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n        };\r\n    \r\n    // const getMyNweets = async () => {\r\n    //     const nweets = await dbService\r\n    //     .collection(\"nweets\")\r\n    //     .where(\"creatorId\",\"==\",userObj.uid)\r\n    //     .orderBy(\"createdAt\",\"asc\")\r\n    //     .get();\r\n\r\n    //     console.log(nweets.docs.map((doc) => doc.data()));\r\n    // };\r\n    // useEffect(() => {\r\n    //     getMyNweets();\r\n    // }, []);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName : newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value = {newDisplayName}\r\n                    />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to =\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n //   <nav>This is Navigation!</nav>;\r\n};\r\n\r\nexport default Navigation;","\r\nimport { HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                { isLoggedIn ? (\r\n                    <>\r\n                     <Route exact path=\"/\">\r\n                           <Home userObj={userObj}/>\r\n                     </Route>\r\n                     <Route exact path =\"/profile\">\r\n                         <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                      </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect,useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n   const [init, setInit] = useState(false);\n\n   const [userObj, setUserObj]=useState(null);\n   useEffect(() => {\n      authService.onAuthStateChanged( (user) => {\n         if(user){\n\n            setUserObj({\n               uid : user .uid,\n               displayName : user .displayName,\n               updateProfile : (args) => user .updateProfile(args),\n            });\n         }else{\n            setUserObj(false);\n         }\n         setInit(true);\n      });\n   }, []);\n\n   const refreshUser = () => {\n      // setUserObj(authService.currentUser);\n      const user = authService.currentUser;\n      setUserObj({\n         uid : user .uid,\n         displayName : user .displayName,\n         updateProfile : (args) => user .updateProfile(args),\n      });\n   };\n   return (\n      <>\n         {init ? (\n            <AppRouter\n               refreshUser={refreshUser}\n               isLoggedIn={Boolean(userObj)}\n               userObj={userObj}\n            />\n   ) : (\n      \"initializing...\"\n   )}\n\n      </>\n   );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n//import firebase from 'firebase/compat/app';\n//import 'firebase/compat/auth';\n//import 'firebase/compat/firestore';\n//console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n\n"],"sourceRoot":""}